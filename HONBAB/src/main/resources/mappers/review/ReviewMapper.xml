<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
CREATE TABLE REVIEW(
WRITE_NO NUMBER(10) PRIMARY KEY,
ID VARCHAR2(15) NOT NULL,
NICKNAME VARCHAR2(20) NOT NULL,
TITLE VARCHAR2(30) NOT NULL,
CONTENT VARCHAR2(1000) NOT NULL,
VIEWS NUMBER(10) DEFAULT 0,
WRITE_DATE DATE DEFAULT SYSDATE NOT NULL,
IMG_NAME VARCHAR2(50),
LIKES NUMBER(10) DEFAULT 0,
IDX VARCHAR2(1) NOT NULL
);

CREATE SEQUENCE REVIEW_SEQ 
INCREMENT BY 1 
START WITH 1 
MAXVALUE 5000
NOCYCLE
NOCACHE;

ALTER TABLE REVIEW ADD CONSTRAINT FK_REVIEW FOREIGN KEY(IDX) REFERENCES WRITE_GROUP(IDX) ON DELETE CASCADE;
-->

<!-- 
CREATE TABLE REVIEW_REPLY(
IDX VARCHAR2(1) NOT NULL,
REPLY_ID VARCHAR2(15) NOT NULL,
REPLY_NICKNAME VARCHAR2(20) NOT NULL,
REPLY VARCHAR2(500) NOT NULL,
WRITE_DATE DATE DEFAULT SYSDATE NOT NULL,
REPLY_NO NUMBER(10) PRIMARY KEY
);

CREATE SEQUENCE REVIEW_REPLY_SEQ 
INCREMENT BY 1 
START WITH 1 
MAXVALUE 5000
NOCYCLE
NOCACHE;
--> 

<mapper namespace="com.web.honbab.mybatis.ReviewMapper">

	<resultMap type="com.web.honbab.dto.ReviewDTO" id="review">
		<id property="writeNo" column="WRITE_NO" />
		<result property="id" column="ID" />
		<result property="nickName" column="NICKNAME" />
		<result property="title" column="TITLE" />
		<result property="content" column="CONTENT" />
		<result property="views" column="VIEWS" />
		<result property="writeDate" column="WRITE_DATE" />
		<result property="imgName" column="IMG_NAME" />
		<result property="likes" column="LIKES" />
		<result property="idx" column="IDX" />
	</resultMap>

	<resultMap type="com.web.honbab.dto.ReviewReplyDTO" id="reviewReply">
		<id property="idx" column="IDX" />
		<result property="replyId" column="REPLY_ID" />
		<result property="replyNick" column="REPLY_NICKNAME" />
		<result property="reply" column="REPLY" />
		<result property="writeDate" column="WRITE_DATE" />
		<result property="replyNo" column="REPLY_NO" />
		<result property="writeNo" column="WRITE_NO" />
	</resultMap>
	
	<resultMap type="com.web.honbab.dto.ReviewLikeDTO" id="reviewLike">
		<id property="likeId" column="LINE_ID" />
		<result property="likeWriteNo" column="LIKE_WRITE_NO" />
	</resultMap>

	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡCRUDㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	<select id="reviewAllList" resultMap="review">
		SELECT B.* FROM
		(SELECT ROWNUM RN, A.* FROM
		(SELECT * FROM REVIEW ORDER BY WRITE_NO DESC) A) B 
		WHERE RN BETWEEN #{s} AND #{e}
	</select>

	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡPAGING ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	<select id="reviewCount" resultType="Integer">
		SELECT COUNT(*) FROM REVIEW
	</select>
	
	<select id="reviewContent" resultMap="review">
		SELECT * FROM REVIEW
		WHERE WRITE_NO=#{writeNo}
	</select>

	<insert id="saveReview">
		INSERT INTO REVIEW
		(WRITE_NO, ID, NICKNAME, TITLE, CONTENT, IMG_NAME, IDX)
		VALUES(REVIEW_SEQ.NEXTVAL, #{id}, #{nickName}, #{title}, #{content}, #{imgName}, #{idx})
	</insert>
	
	<update id="modifyReview">
		UPDATE REVIEW SET
		TITLE=#{title},
		CONTENT=#{content},
		IMG_NAME=#{imgName}
		WHERE WRITE_NO=#{writeNo}
	</update>
	
	<delete id="deleteReview">
		DELETE FROM REVIEW 
		WHERE WRITE_NO=#{writeNo}
	</delete>
	
	<select id="reviewBestList" resultMap="review">
		SELECT *
		FROM (SELECT * FROM REVIEW ORDER BY VIEWS DESC) A
		<![CDATA[WHERE ROWNUM <= 5]]> <!-- <![CDATA[ XML내에서 부등호 식별문장 ]]> -->
	</select>
	
	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡVIEWS ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	<update id="upViews">
		UPDATE REVIEW 
		SET VIEWS=VIEWS+1 
		WHERE WRITE_NO=#{writeNo}
	</update>
	
	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡREPLY ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	<insert id="addReply">
		INSERT INTO REVIEW_REPLY(IDX, REPLY_ID, REPLY_NICKNAME, REPLY, REPLY_NO, WRITE_NO)
		VALUES(#{idx}, #{replyId}, #{replyNick}, #{reply}, REVIEW_REPLY_SEQ.NEXTVAL, #{writeNo})
	</insert>
	
	<select id="getReply" resultMap="review">
		SELECT * FROM REVIEW_REPLY
		WHERE WRITE_NO=#{writeNo}
		ORDER BY REPLY_NO DESC
	</select>
	
	<delete id="deleteReply" parameterType="Integer">
		DELETE FROM REVIEW_REPLY
		WHERE REPLY_NO=#{replyNo}
	</delete>
	
	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡLIKE ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	<select id="likeChk" resultType="Integer">
		SELECT COUNT(*)
		FROM REVIEW_LIKE
		WHERE LINE_ID = #{likeId}
		AND LIKE_WRITE_NO=#{writeNo}
	</select>
	
	<update id="likeUp">
		UPDATE REVIEW SET 
		LIKES = LIKES+1
		WHERE WRITE_NO=#{writeNo}
	</update>
	
	<update id="likeDown">
		UPDATE REVIEW SET 
		LIKES = LIKES-1
		WHERE WRITE_NO=#{writeNo}
	</update>
	
	<insert id="like">
		INSERT INTO REVIEW_LIKE 
		VALUES(#{likeId}, #{writeNo})
	</insert>
	
	<delete id="unlike">
		DELETE FROM REVIEW_LIKE
		WHERE LINE_ID = #{likeId}
		AND LIKE_WRITE_NO=#{writeNo}
	</delete>

	<!--ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡSEARCH ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	<select id="reviewSearchCount" resultType="Integer">
		SELECT COUNT(*) FROM REVIEW 
		WHERE (TITLE LIKE '%'||#{keyword}||'%' 
		OR NICKNAME LIKE '%'||#{keyword}||'%') 
	</select>

	<select id="searchByTitle" resultMap="review">
		SELECT B.* FROM
		(SELECT ROWNUM RN, A.* FROM
		(SELECT * FROM REVIEW WHERE TITLE LIKE '%'||#{keyword}||'%' ORDER BY WRITE_NO DESC) A) B 
		WHERE RN BETWEEN #{s} AND #{e}
	</select>
	
	<select id="searchByNick" resultMap="review">
		SELECT B.* FROM
		(SELECT ROWNUM RN, A.* FROM
		(SELECT * FROM REVIEW WHERE NICKNAME LIKE '%'||#{keyword}||'%' ORDER BY WRITE_NO DESC) A) B 
		WHERE RN BETWEEN #{s} AND #{e}
	</select>


</mapper>
